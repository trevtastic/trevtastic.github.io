//
// Dropdown menus
// --------------------------------------------------

@use "../../functions" as fn;
@use "../../variables" as globs;
@use "../../mixins" as mx;


// Dropdown arrow/caret
.caret {
	display: inline-block;
	width: 0;
	height: 0;
	margin-left: fn.pixelc( 2px );
	vertical-align: middle;
	border-top: globs.$caret-width-base dashed;
	border-top: globs.$caret-width-base solid \9; // IE8
	border-right: globs.$caret-width-base solid transparent;
	border-left: globs.$caret-width-base solid transparent;
}

// The dropdown wrapper (div)
.dropup,
.dropdown {
	position: relative;
}

// Prevent the focus on the dropdown toggle when closing dropdowns
.c-dropdown__toggle:focus {
	outline: 0;
}

// The dropdown menu (ul)
.c-dropdown__menu {
	position: absolute;
	top: 100%;
	left: 0;
	z-index: globs.$zindex-dropdown;
	display: none; // none by default, but block on "open" of the menu
	float: left;
	min-width: fn.pixelc( 160px );
	padding: fn.pixelc( 5px ) 0;
	margin: fn.pixelc( 2px ) 0 0; // override default ul
	font-size: globs.$font-size-base;
	text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
	list-style: none;
	background-color: globs.$dropdown-bg;
	background-clip: padding-box;
	border: 1px solid globs.$dropdown-fallback-border; // IE8 fallback
	border: 1px solid globs.$dropdown-border;
	border-radius: globs.$border-radius-base;
	@include mx.box-shadow( 0 fn.pixelc( 6px ) fn.pixelc( 12px ) rgba( 0, 0, 0, .175 ) );

	// Aligns the dropdown menu to right
	//
	// Deprecated as of 3.1.0 in favor of `.dropdown-menu-[dir]`
	&.pull-right {
		right: 0;
		left: auto;
	}

	// Dividers (basically an hr) within the dropdown
	.divider {
		@include mx.nav-divider( globs.$dropdown-divider-bg );
	}

	// Links within the dropdown menu
	> li > a {
		display: block;
		padding: fn.pixelc( 3px ) fn.pixelc( 20px );
		clear: both;
		font-weight: 400;
		line-height: globs.$line-height-base;
		color: globs.$dropdown-link-color;
		white-space: nowrap; // prevent links from randomly breaking onto new lines

		&:hover,
		&:focus {
			color: globs.$dropdown-link-hover-color;
			text-decoration: none;
			background-color: globs.$dropdown-link-hover-bg;
		}
	}
}

// Active state
.c-dropdown__menu > .active > a {

	&,
	&:hover,
	&:focus {
		color: globs.$dropdown-link-active-color;
		text-decoration: none;
		background-color: globs.$dropdown-link-active-bg;
		outline: 0;
	}
}

// Disabled state
//
// Gray out text and ensure the hover/focus state remains gray

.c-dropdown__menu > .disabled > a {

	&,
	&:hover,
	&:focus {
		color: globs.$dropdown-link-disabled-color;
	}

	// Nuke hover/focus effects
	&:hover,
	&:focus {
		text-decoration: none;
		cursor: globs.$cursor-disabled;
		background-color: transparent;
		background-image: none; // Remove CSS gradient
		@include mx.reset-filter;
	}
}

// Open state for the dropdown
.open {

	// Show the menu
	> .c-dropdown__menu {
		display: block;
	}

	// Remove the outline when :focus is triggered
	> a {
		outline: 0;
	}
}

// Menu positioning
//
// Add extra class to `.dropdown-menu` to flip the alignment of the dropdown
// menu with the parent.
.c-dropdown__menu--right {
	right: 0;
	left: auto; // Reset the default from `.dropdown-menu`
}
// With v3, we enabled auto-flipping if you have a dropdown within a right
// aligned nav component. To enable the undoing of that, we provide an override
// to restore the default dropdown menu alignment.
//
// This is only for left-aligning a dropdown menu within a `.navbar-right` or
// `.pull-right` nav component.
.c-dropdown__menu--left {
	right: auto;
	left: 0;
}

// Dropdown section headers
.c-dropdown__header {
	display: block;
	padding: fn.pixelc( 3px ) fn.pixelc( 20px );
	font-size: globs.$font-size-small;
	line-height: globs.$line-height-base;
	color: globs.$dropdown-header-color;
	white-space: nowrap; // as with > li > a
}

// Backdrop to catch body clicks on mobile, etc.
.c-dropdown__backdrop {
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: ( globs.$zindex-dropdown - 10 );
}

// Right aligned dropdowns
.pull-right > .c-dropdown__menu {
	right: 0;
	left: auto;
}

// Allow for dropdowns to go bottom up (aka, dropup-menu)
//
// Just add .dropup after the standard .dropdown class and you're set, bro.
// TODO: abstract this so that the navbar fixed styles are not placed here?

.dropup,
.navbar-fixed-bottom .dropdown {

	// Reverse the caret
	.caret {
		content: "";
		border-top: 0;
		border-bottom: globs.$caret-width-base dashed;
		border-bottom: globs.$caret-width-base solid \9; // IE8
	}
	// Different positioning for bottom up menu
	.c-dropdown__menu {
		top: auto;
		bottom: 100%;
		margin-bottom: fn.pixelc( 2px );
	}
}


// Component alignment
//
// Reiterate per navbar.less and the modified component alignment there.

@media ( min-width: globs.$grid-float-breakpoint )
{
	.navbar-right {

		.c-dropdown__menu {
			right: 0;
			left: auto;
		}
		
		// Necessary for overrides of the default right aligned menu.
		// Will remove come v4 in all likelihood.
		.c-dropdown__menu--left {
			left: 0;
			right: auto;
		}
	}
}
